{"version":3,"sources":["modules/admin/components/AdminHeader.js","modules/admin/screens/dashboard/AdminDashboardScreen.js","environments/environments.js","services/pedidoService.js","modules/admin/screens/pedidos/AdminPedidosScreen.js","modules/admin/screens/verpedido/AdminVerPedidoScreen.js","modules/admin/AdminRouter.js","context/pos/posContext.js","context/pos/posReducer.js","context/pos/posState.js","services/categoriaService.js","assets/img/plato_blanco.svg","modules/pos/screens/pedido/components/PosCategorias.js","modules/pos/screens/pedido/components/PosComandaItem.js","modules/pos/screens/pedido/components/PosModalBoleta.js","modules/pos/screens/pedido/components/PosComanda.js","assets/img/logo.svg","assets/img/search.svg","modules/pos/screens/pedido/components/PosHeader.js","services/mesasService.js","modules/pos/screens/pedido/components/PosMesas.js","modules/pos/screens/pedido/components/PosPlato.js","modules/pos/screens/pedido/components/PosPlatos.js","modules/pos/screens/pedido/PosPedidoScreen.js","modules/pos/PosRouter.js","App.js","index.js"],"names":["AdminHeader","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","placeholder","AdminDashboardScreen","URL_BACKEND","getPedidos","a","fetch","peticion","json","data","getPedidoById","pedido_id","AdminPedidosScreen","history","useState","columns","label","field","rows","datatable","setDatatable","useEffect","then","ok","filas","pedidos","map","pedido","pedido_fech","pedido_nro","pedido_est","usuario_nombre","Usuario","usu_nom","usu_ape","numero_mesa","Mesa","mesa_nro","total_platos","PedidoPlatos","reduce","valorAnt","objActual","pedidoplato_cant","acciones","onClick","push","AdminVerPedidoScreen","props","setPedido","cargando","setCargando","match","params","objPedidoPlato","i","Plato","plato_nom","src","plato_img","alt","width","plato_pre","pedidoplato_id","AdminRouter","path","component","PosContext","createContext","PosReducer","stateActual","action","categoria_global","mesa_global","modal_boleta","PosState","children","useReducer","state","dispatch","Provider","value","setModalBoleta","valor","borrarPedido","filter","objMesa","mesa_id","restarPlatoAPedido","objPlato","objPedidoActual","find","objPedido","platoPedido","platos","plato","plato_id","cantidad","length","seleccionarCategoriaGlobal","objCategoria","seleccionarMesaGlobal","incrementarPlatoAPedido","estado","getCategorias","getPlatosByCategoriaId","PosCategorias","categorias","setCategorias","useContext","content","role","style","textAlign","categoria_id","platoIcon","categoria_nom","PosComandaItem","PosModalBoleta","Modal","show","onHide","Header","closeButton","Title","Body","Footer","PosComanda","pedidoActual","PosHeader","logo","searchIcon","getMesas","PosMesas","mesas","setMesas","PosPlato","PosPlatos","setPlatos","Platos","PosPedidoScreen","PosRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.477153a5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AdminHeader = () => {\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\"><span className=\"text-warning\">POS</span> Admin</a>\r\n        <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n          aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Link</a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n                <a className=\"dropdown-item\" href=\"#\">Action 1</a>\r\n                <a className=\"dropdown-item\" href=\"#\">Action 2</a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\n\r\nconst AdminDashboardScreen = () => {\r\n  return (\r\n    <div>\r\n      ADMIN DASHBOARD\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboardScreen\r\n","export const URL_BACKEND = \"https://codigo4-pos.herokuapp.com\";","import { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const postPedido = async objPedido => {\r\n  const peticion = await fetch(`${URL_BACKEND}/pedido`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(objPedido)\r\n  });\r\n  const data = await peticion.json();\r\n  return data;\r\n}\r\n\r\nexport const getPedidos = async () => {\r\n  const peticion = await fetch(`${URL_BACKEND}/pedido`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}\r\n\r\nexport const getPedidoById = async (pedido_id) => {\r\n  const peticion = await fetch(`${URL_BACKEND}/pedido/${pedido_id}`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport { getPedidos } from '../../../../services/pedidoService';\r\n\r\nconst AdminPedidosScreen = ({ history }) => {\r\n\r\n\r\n  const [datatable, setDatatable] = useState({\r\n    columns: [\r\n      { label: \"Id\", field: \"pedido_id\" },\r\n      { label: \"Fecha\", field: \"pedido_fech\" },\r\n      { label: \"Nro\", field: \"pedido_nro\" },\r\n      { label: \"Estado\", field: \"pedido_est\" },\r\n      { label: \"Usuario\", field: \"usuario_nombre\" },\r\n      { label: \"Mesa\", field: \"numero_mesa\" },\r\n      { label: \"Platos\", field: \"total_platos\" },\r\n      { label: \"Acciones\", field: \"acciones\" }\r\n    ],\r\n    rows: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    getPedidos().then((data) => {\r\n      if (data.ok) {\r\n        const filas = data.pedidos.map((pedido) => {\r\n          return {\r\n            pedido_id: pedido.pedido_id,\r\n            pedido_fech: pedido.pedido_fech,\r\n            pedido_nro: pedido.pedido_nro,\r\n            pedido_est: pedido.pedido_est,\r\n            usuario_nombre: pedido.Usuario?.usu_nom + \" \" + pedido.Usuario?.usu_ape,\r\n            numero_mesa: pedido.Mesa?.mesa_nro,\r\n            total_platos: pedido.PedidoPlatos.reduce((valorAnt, objActual) => {\r\n              return valorAnt + +objActual.pedidoplato_cant;\r\n            }, 0),\r\n            acciones: <button className=\"btn btn-dark\" onClick={() => {\r\n              history.push(`/admin/pedidos/${pedido.pedido_id}`);\r\n            }}>Ver Pedido</button>\r\n          }\r\n        });\r\n\r\n        setDatatable({\r\n          ...datatable,\r\n          rows: filas\r\n        })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-4 text-center\">\r\n            Lista de Pedidos\r\n          </h1>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n\r\n              <MDBDataTableV5 data={datatable} />\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminPedidosScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getPedidoById } from '../../../../services/pedidoService';\r\n\r\nconst AdminVerPedidoScreen = (props) => {\r\n\r\n  const [pedido, setPedido] = useState({});\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getPedidoById(props.match.params.pedido_id).then(data => {\r\n      if (data.ok) {\r\n        setPedido(data.pedido);\r\n      }\r\n      setCargando(false);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      {\r\n        cargando ?\r\n          <div className=\"alert alert-primary text-center display-4\">\r\n            Cargando... <i className=\"fas fa-spinner fa-spin\"></i>\r\n          </div> :\r\n          (\r\n            <>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h4>Información del Pedido</h4>\r\n                </div>\r\n              </div>\r\n              <div className=\"row my-5\">\r\n                <div className=\"col\">\r\n                  <div className=\"card shadow\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <p className=\"card-text\">\r\n                            <strong>Pedido Id:</strong> &nbsp; {pedido.pedido_id}\r\n                          </p>\r\n                          <p className=\"card-text\">\r\n                            <strong>Usuario:</strong> &nbsp; {pedido.Usuario?.usu_nom + \" \" + pedido.Usuario?.usu_ape}\r\n                          </p>\r\n                          <p className=\"card-text\">\r\n                            <strong>Estado del Pedido:</strong> &nbsp;\r\n                    {\r\n                              pedido.pedido_est === \"pagado\" ?\r\n                                <span className=\"badge badge-success\">Pagado</span> :\r\n                                <span className=\"badge badge-secondary\">{pedido.pedido_est}</span>\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-md-6 text-right\">\r\n                          <p className=\"card-text\">\r\n                            <strong>Fecha:</strong> &nbsp; {pedido.pedido_fech}\r\n                          </p>\r\n                          <p className=\"card-text\">\r\n                            <strong>Número de mesa:</strong> &nbsp; {pedido.Mesa?.mesa_nro}\r\n                          </p>\r\n                          <p className=\"card-text\">\r\n                            <strong>Número de pedido:</strong> &nbsp;\r\n                    <span className=\"display-4\"> # {pedido.pedido_nro}</span>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"card shadow\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover table-striped\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>#</th>\r\n                              <th>Cantidad</th>\r\n                              <th>Descripción</th>\r\n                              <th>Foto</th>\r\n                              <th>P. Unitario</th>\r\n                              <th>P. Total</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {\r\n                              pedido.PedidoPlatos.map((objPedidoPlato, i) => {\r\n                                return <tr key={objPedidoPlato.pedidoplato_id}>\r\n                                  <td>{i}</td>\r\n                                  <td>{objPedidoPlato.pedidoplato_cant}</td>\r\n                                  <td>{objPedidoPlato.Plato.plato_nom}</td>\r\n                                  <td><img src={objPedidoPlato.Plato.plato_img} alt=\"\" width=\"120\" /></td>\r\n                                  <td>S/ {objPedidoPlato.Plato.plato_pre}</td>\r\n                                  <td>S/ {+objPedidoPlato.Plato.plato_pre * +objPedidoPlato.pedidoplato_cant}</td>\r\n                                </tr>\r\n                              })\r\n                            }\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )\r\n      }\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminVerPedidoScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AdminHeader from './components/AdminHeader';\r\nimport AdminDashboardScreen from './screens/dashboard/AdminDashboardScreen';\r\nimport AdminPedidosScreen from './screens/pedidos/AdminPedidosScreen';\r\nimport AdminVerPedidoScreen from './screens/verpedido/AdminVerPedidoScreen';\r\nconst AdminRouter = () => {\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <Switch>\r\n        <Route path=\"/admin/dashboard\" component={AdminDashboardScreen} />\r\n        <Route path=\"/admin/pedidos/:pedido_id\" component={AdminVerPedidoScreen} />\r\n        <Route path=\"/admin/pedidos\" component={AdminPedidosScreen} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminRouter\r\n","import { createContext } from \"react\";\r\nconst PosContext = createContext();\r\nexport default PosContext;","const PosReducer = (stateActual, action) => {\r\n  //OJO Todo lo que retorne un REDUCER es el nuevo\r\n  // state\r\n  if (action.type === \"SELECCIONAR_CATEGORIA\") {\r\n    return {\r\n      ...stateActual,\r\n      categoria_global: action.data\r\n    }\r\n  }\r\n  if (action.type === \"SELECCIONAR_MESA\") {\r\n    return {\r\n      ...stateActual,\r\n      mesa_global: action.data\r\n    }\r\n  }\r\n  if (action.type === \"ACTUALIZAR_PEDIDOS\") {\r\n    return {\r\n      ...stateActual,\r\n      pedidos: action.data\r\n    }\r\n  }\r\n  if (action.type === \"MODAL_BOLETA\") {\r\n    return {\r\n      ...stateActual,\r\n      modal_boleta: action.data\r\n    }\r\n  }\r\n  return { ...stateActual }\r\n}\r\nexport default PosReducer;","import React, { useReducer } from 'react'\r\nimport PosContext from './posContext'\r\nimport PosReducer from './posReducer';\r\n\r\nconst PosState = ({ children }) => {\r\n\r\n  const [state, dispatch] = useReducer(PosReducer, {\r\n    categoria_global: null,\r\n    mesa_global: null,\r\n    pedidos: [],\r\n    modal_boleta: false,\r\n  });\r\n\r\n  const setModalBoleta = (valor) => {\r\n    dispatch({\r\n      type: \"MODAL_BOLETA\",\r\n      data: valor\r\n    })\r\n  }\r\n  \r\n  const borrarPedido = () => {\r\n    let { mesa_global, pedidos } = state;\r\n    pedidos = pedidos.filter(pedido => pedido.objMesa.mesa_id !== mesa_global.mesa_id);\r\n    dispatch({\r\n      type: \"ACTUALIZAR_PEDIDOS\",\r\n      data: pedidos\r\n    })\r\n  }\r\n  const incrementarPlatoAPedido = objPlato => {\r\n    const { pedidos, mesa_global } = state;\r\n    if (!mesa_global) return;\r\n    // casos a considerar\r\n    // 1. si la mesa estaba vacía, y es el primer plato del pedido\r\n    // 2. si la mesa tenía un pedido pero no tenía el plato, y vamos \r\n    // a crear el primer plato de ese pedido\r\n    // 3. si la mesa tenía un pedido y tenía un plato de ese tipo en el \r\n    // pedido, para incrementar la cantidad de platos en ese pedido\r\n\r\n    // intentar obtener un pedidoActual en el que figure la mesa_global\r\n    let objPedidoActual =\r\n      pedidos.find(objPedido => objPedido.objMesa.mesa_id === mesa_global.mesa_id);\r\n\r\n    // preguntamos si el objPedido actual, es un obj que existe(es decir que la mesa\r\n    // global seleccionada estuviera presente en un pedido del arreglo de pedidos),\r\n    // en caso contrario, el objPedidoActual(linea 24) sería \"undefined\"\r\n    if (objPedidoActual) {\r\n      // significa que la mesa_global actual, ya tenía un pedido}\r\n      // Vamos a analizar si el plato que queremos agregar al pedido, ya existía\r\n      let platoPedido =\r\n        objPedidoActual.platos.find(plato => plato.plato_id === objPlato.plato_id);\r\n\r\n      // Preguntamos si el plato que estuvimos buscando, ya se encontraba \r\n      // en el arreglo de platos, debemos autmentar una unidad a la cantidad.\r\n      // en caso contrario, significa que la mesa sí tenía platos, pero no \r\n      // tenía un plato como el que queremos agregar\r\n      if (platoPedido) {\r\n        // ya había uno o más platos del plato que queremos agregar\r\n        platoPedido.cantidad += 1;\r\n        dispatch({\r\n          type: \"ACTUALIZAR_PEDIDOS\",\r\n          data: pedidos\r\n        })\r\n      } else {\r\n        // la mesa tenía platos, pero no como el que queremos agregar\r\n        objPedidoActual.platos.push({\r\n          ...objPlato,\r\n          cantidad: 1\r\n        });\r\n        dispatch({\r\n          type: \"ACTUALIZAR_PEDIDOS\",\r\n          data: pedidos\r\n        })\r\n      }\r\n\r\n\r\n    } else {\r\n      // significa que la mesa_global actual, está vacía, no tenía ningún pedido\r\n      // agregamos el primer pedido de la mesa_actual con su primer plato\r\n      pedidos.push({\r\n        estado: \"pendiente\",\r\n        objMesa: {\r\n          ...mesa_global\r\n        },\r\n        platos: [\r\n          {\r\n            ...objPlato,\r\n            cantidad: 1\r\n          }\r\n        ]\r\n      });\r\n\r\n      // Entonces actualizamos el state global\r\n      dispatch({\r\n        type: \"ACTUALIZAR_PEDIDOS\",\r\n        data: pedidos\r\n      });\r\n    }\r\n  }\r\n  const restarPlatoAPedido = objPlato => {\r\n    let { pedidos, mesa_global } = state;\r\n    if (!mesa_global) return;\r\n    let objPedidoActual =\r\n      pedidos.find(objPedido => objPedido.objMesa.mesa_id === mesa_global.mesa_id);\r\n    if (objPedidoActual) {\r\n      let platoPedido =\r\n        objPedidoActual.platos.find(plato => plato.plato_id === objPlato.plato_id);\r\n      if (platoPedido) {\r\n        platoPedido.cantidad -= 1;\r\n        if (platoPedido.cantidad === 0) {\r\n          objPedidoActual.platos = objPedidoActual.platos.filter(plato => plato.plato_id !== objPlato.plato_id);\r\n          if (objPedidoActual.platos.length === 0) {\r\n            pedidos = pedidos.filter(pedido => pedido.objMesa.mesa_id !== mesa_global.mesa_id);\r\n          }\r\n        }\r\n        dispatch({\r\n          type: \"ACTUALIZAR_PEDIDOS\",\r\n          data: pedidos\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const seleccionarCategoriaGlobal = objCategoria => {\r\n    // intentar seleccionar o settear una categoria global\r\n    dispatch({\r\n      data: objCategoria,\r\n      type: \"SELECCIONAR_CATEGORIA\"\r\n    });\r\n  }\r\n  const seleccionarMesaGlobal = objMesa => {\r\n    dispatch({\r\n      data: objMesa,\r\n      type: \"SELECCIONAR_MESA\"\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <PosContext.Provider value={{\r\n      mesa_global: state.mesa_global,\r\n      categoria_global: state.categoria_global,\r\n      pedidos: state.pedidos,\r\n\r\n      modal_boleta: state.modal_boleta,\r\n      setModalBoleta: setModalBoleta,\r\n\r\n      borrarPedido: borrarPedido,\r\n      restarPlatoAPedido: restarPlatoAPedido,\r\n      seleccionarCategoriaGlobal: seleccionarCategoriaGlobal,\r\n      seleccionarMesaGlobal: seleccionarMesaGlobal,\r\n      incrementarPlatoAPedido: incrementarPlatoAPedido\r\n    }}>\r\n      {children}\r\n    </PosContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PosState\r\n","import { URL_BACKEND } from \"../environments/environments\";\r\nexport const getCategorias = async () => {\r\n  const peticion = await fetch(`${URL_BACKEND}/categoria`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}\r\nexport const getPlatosByCategoriaId = async id => {\r\n  const peticion = await fetch(`${URL_BACKEND}/categoria/${id}/platos`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}","export default __webpack_public_path__ + \"static/media/plato_blanco.6334c308.svg\";","import React, { useContext, useEffect, useState } from 'react'\r\nimport PosContext from '../../../../../context/pos/posContext';\r\nimport { getCategorias } from '../../../../../services/categoriaService';\r\nimport platoIcon from \"./../../../../../assets/img/plato_blanco.svg\"\r\n\r\nconst PosCategorias = () => {\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n  const { seleccionarCategoriaGlobal, categoria_global } = useContext(PosContext);\r\n\r\n\r\n  useEffect(() => {\r\n    getCategorias().then(data => {\r\n      if (data.ok) {\r\n        setCategorias(data.content);\r\n        setCargando(false);\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul className=\"menu__lista\">\r\n        {cargando ?\r\n          <div className=\"spinner-border text-light\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div> :\r\n\r\n          categorias.map(objCategoria => {\r\n            // return (<li className=\"active\">\r\n            return (<li style={{ textAlign: \"center\" }}\r\n              key={objCategoria.categoria_id}\r\n              className={\r\n                objCategoria.categoria_id === categoria_global?.categoria_id ? \"active\" : \"\"\r\n              }\r\n              onClick={() => {\r\n                seleccionarCategoriaGlobal(objCategoria);\r\n              }}>\r\n              <img src={platoIcon} alt=\"\" />\r\n              <span>{objCategoria.categoria_nom}</span>\r\n            </li>);\r\n          })\r\n        }\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default PosCategorias\r\n","import React from 'react'\r\n\r\nconst PosComandaItem = ({ objPlato }) => {\r\n  return (\r\n    <li className=\"comanda__item\">\r\n      <p className=\"comanda__nombre\">\r\n        <span><strong>{objPlato.plato_nom}</strong></span>\r\n        <span>Precio: S/ {objPlato.plato_pre}</span>\r\n      </p>\r\n      <p className=\"comanda__cantidad\">{objPlato.cantidad}</p>\r\n      <p className=\"comanda__precio\">\r\n        <strong>S/ {+objPlato.cantidad * +objPlato.plato_pre}</strong>\r\n      </p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosComandaItem\r\n","import React, { useContext } from 'react'\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nimport PosContext from '../../../../../context/pos/posContext';\r\n\r\nconst PosModalBoleta = () => {\r\n\r\n  const { modal_boleta, setModalBoleta } = useContext(PosContext);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={modal_boleta} onHide={() => {\r\n        setModalBoleta(false);\r\n      }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          aqui irá plantilla\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\">\r\n            Imprimir\r\n          </button>\r\n          <button className=\"btn btn-danger\">\r\n            Cerrar\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PosModalBoleta\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/pos/posContext'\r\nimport { postPedido } from '../../../../../services/pedidoService';\r\nimport PosComandaItem from './PosComandaItem';\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Swal from \"sweetalert2\";\r\nimport PosModalBoleta from './PosModalBoleta';\r\n\r\nconst PosComanda = () => {\r\n\r\n  const { pedidos, mesa_global, borrarPedido,\r\n    modal_boleta, setModalBoleta } = useContext(PosContext);\r\n\r\n  let pedidoActual = null;\r\n\r\n  if (mesa_global) {\r\n    pedidoActual = pedidos.find(objPedido => objPedido.objMesa.mesa_id === mesa_global.mesa_id);\r\n  }\r\n\r\n  const pagar = () => {\r\n    setModalBoleta(true);\r\n    return;\r\n\r\n    // armar el objeto pedido\r\n    /**\r\n     * {\r\n    \"pedido_fech\": \"2021-01-15 09:20:00\",\r\n    \"pedido_nro\": \"123\",\r\n    \"pedido_est\": \"pagado\",\r\n    \"usu_id\": 9,\r\n    \"mesa_id\": 4,\r\n    \"pedidoplatos\": [\r\n            {\r\n                \"plato_id\": 1,\r\n                \"pedidoplato_cant\": 3\r\n            },\r\n            {\r\n                \"plato_id\": 2,\r\n                \"pedidoplato_cant\": 2\r\n            }\r\n        ]\r\n    }\r\n     */\r\n\r\n    Swal.fire({\r\n      title: \"¿Pagar el pedido?\",\r\n      text: \"Confirme que está cancelando el total del pedido\",\r\n      icon: \"warning\",\r\n      showCancelButton: true\r\n    }).then(rpta => {\r\n\r\n      if (rpta.isConfirmed) {\r\n        let pedidoActual = pedidos.find(pedido => pedido.objMesa.mesa_id === mesa_global.mesa_id);\r\n        let platos = pedidoActual.platos.map(plato => {\r\n          return {\r\n            plato_id: plato.plato_id,\r\n            pedidoplato_cant: plato.cantidad\r\n          }\r\n        });\r\n        const objPedido = {\r\n          pedido_fech: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          pedido_nro: uuidv4(),\r\n          pedido_est: \"pagado\",\r\n          usu_id: 2,\r\n          mesa_id: mesa_global.mesa_id,\r\n          pedidoplatos: platos\r\n        }\r\n        postPedido(objPedido).then(data => {\r\n          if (data.ok) {\r\n            // TO-DO: borrar el pedido de la mesa actual\r\n            Swal.fire({\r\n              title: \"Hecho!\",\r\n              text: \"Pedido registrado en la base de datos\",\r\n              icon: \"success\",\r\n              timer: 700,\r\n              position: \"top-right\"\r\n            });\r\n\r\n            borrarPedido();\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"comanda\">\r\n      <h4 className=\"comanda__mesa\">{mesa_global ? `Mesa ${mesa_global.mesa_nro}` : \"Sin mesa seleccionada\"}</h4>\r\n      <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n      <hr />\r\n\r\n      {\r\n        !mesa_global ?\r\n          (<div>Seleccione una mesa</div>) :\r\n          pedidoActual ?\r\n            (<>\r\n              <ul className=\"comanda__lista\">\r\n                {\r\n                  pedidoActual.platos.map(objPlato => {\r\n                    return (<PosComandaItem objPlato={objPlato} key={objPlato.plato_id} />)\r\n                  })\r\n                }\r\n              </ul>\r\n              <button className=\"boton boton-success boton-block\" onClick={() => {\r\n                pagar();\r\n              }}>PAGAR</button>\r\n            </>) :\r\n            <div>\r\n              No hay pedidos en la mesa {mesa_global.mesa_nro} 😥\r\n            </div>\r\n\r\n      }\r\n\r\n      <PosModalBoleta />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosComanda\r\n","export default __webpack_public_path__ + \"static/media/logo.a9757059.svg\";","export default __webpack_public_path__ + \"static/media/search.c031f9ef.svg\";","import React from 'react'\r\nimport logo from \"./../../../../../assets/img/logo.svg\"\r\nimport searchIcon from \"./../../../../../assets/img/search.svg\"\r\nconst PosHeader = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <img src={logo} alt=\"\" />\r\n      </div>\r\n      <div className=\"header__buscador\">\r\n        <img src={searchIcon} alt=\"\" />\r\n        <input type=\"text\" className=\"header__input\" placeholder=\"Busca un término\" />\r\n      </div>\r\n      <div className=\"header__usuario\">\r\n        <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n        <span>Jorge Garnica</span>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PosHeader\r\n","import { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const getMesas = async () => {\r\n  const peticion = await fetch(`${URL_BACKEND}/mesa`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport PosContext from '../../../../../context/pos/posContext';\r\nimport { getMesas } from '../../../../../services/mesasService';\r\n\r\nconst PosMesas = () => {\r\n\r\n  const [mesas, setMesas] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n  const { seleccionarMesaGlobal, mesa_global } = useContext(PosContext);\r\n\r\n  useEffect(() => {\r\n    getMesas().then(data => {\r\n      if (data.ok) {\r\n        setMesas(data.content);\r\n      }\r\n      setCargando(false);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"mesas\">\r\n      <ul className=\"mesas__lista\">\r\n        {\r\n          cargando ?\r\n\r\n            <div className=\"spinner-border text-light\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div> :\r\n\r\n            mesas.map((objMesa) => {\r\n              return (<li className={objMesa.mesa_id === mesa_global?.mesa_id ? \"mesas__mesa activo\" : \"\"}\r\n                key={objMesa.mesa_id} onClick={() => {\r\n                  seleccionarMesaGlobal(objMesa);\r\n                }}>\r\n                <span className=\"mesas__titulo\">Mesa</span>\r\n                <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n              </li>)\r\n            })\r\n        }\r\n      </ul>\r\n      <div className=\"mesas__info\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosMesas\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/pos/posContext';\r\n\r\nconst PosPlato = ({ objPlato }) => {\r\n  const { incrementarPlatoAPedido, restarPlatoAPedido } = useContext(PosContext);\r\n  return (\r\n    <div className=\"carta__plato\">\r\n      <img\r\n        src={objPlato.plato_img}\r\n        alt=\"\" />\r\n      <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n      <span className=\"carta__precio\">S/ {objPlato.plato_pre}</span>\r\n      <div className=\"carta__botones\">\r\n        <button className=\"boton boton-outline-primary boton-restar\"\r\n          onClick={() => {\r\n            restarPlatoAPedido(objPlato);\r\n          }}>-1</button>\r\n        <button className=\"boton boton-outline-primary boton-sumar\"\r\n          onClick={() => {\r\n            incrementarPlatoAPedido(objPlato);\r\n          }}>+1</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlato\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PosContext from '../../../../../context/pos/posContext';\r\nimport { getPlatosByCategoriaId } from '../../../../../services/categoriaService';\r\nimport PosPlato from './PosPlato'\r\n\r\nconst PosPlatos = () => {\r\n\r\n  const [platos, setPlatos] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n  const { categoria_global } = useContext(PosContext);\r\n\r\n  // SI NO TENEMOS UNA CATEGORIA GLOBAL, NO MOSTRAR NADA⚡\r\n  // SI TENEMOS UNA CATEGORIA GLOBAL, CARGAR LOS PLATOS DE DICHA CATEGORÍA\r\n  // SI LA CATEOGRÍA GLOBAL CAMBIA, EL COMPONENTE POSPLATOS, DEBE ACTUALIZAR LA INFO\r\n  // CON LOS NUEVOS PLATOS\r\n\r\n  useEffect(() => {\r\n    setCargando(true)\r\n    if (categoria_global) {\r\n      getPlatosByCategoriaId(categoria_global.categoria_id).then(data => {\r\n        if (data.ok) {\r\n          setPlatos(data.content.Platos);\r\n          setCargando(false);\r\n        }\r\n      })\r\n    }\r\n  }, [categoria_global]);\r\n\r\n\r\n  return (\r\n    <div className=\"carta__platos\">\r\n      {\r\n        categoria_global ?\r\n          cargando ?\r\n            <div className=\"text-light\">Cargando</div> :\r\n            (\r\n              platos.map(objPlato => {\r\n                return <PosPlato objPlato={objPlato} key={objPlato.plato_id} />\r\n              })\r\n            )\r\n          :\r\n          <h4 className=\"text-light\">\r\n            Ninguna categoría ha sido seleccionada\r\n          </h4>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlatos\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../context/pos/posContext'\r\nimport PosCategorias from './components/PosCategorias'\r\nimport PosComanda from './components/PosComanda'\r\nimport PosHeader from './components/PosHeader'\r\nimport PosMesas from './components/PosMesas'\r\nimport PosPlatos from './components/PosPlatos'\r\n\r\nconst PosPedidoScreen = () => {\r\n  const { categoria_global, mesa_global } = useContext(PosContext);\r\n  return (\r\n    <>\r\n      <PosHeader />\r\n      <main className=\"pos-container\">\r\n        <PosCategorias />\r\n        <section className=\"tabla\">\r\n          <PosMesas />\r\n          <div className=\"pedido\">\r\n            <div className=\"carta\">\r\n              <h3>Lista de Platos Categoria: &nbsp;\r\n                <span className=\"color-secundario\">{categoria_global?.categoria_nom || \"Seleccione\"}</span>\r\n              </h3>\r\n\r\n              <PosPlatos />\r\n            </div>\r\n            <div className=\"boleta\">\r\n              <h3>Pedido Mesa: &nbsp;\r\n                <span className=\"color-secundario\">{mesa_global?.mesa_nro || \"Seleccione\"}</span>\r\n              </h3>\r\n              <hr />\r\n              <PosComanda />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PosPedidoScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport PosState from '../../context/pos/posState';\r\nimport PosPedidoScreen from './screens/pedido/PosPedidoScreen';\r\nconst PosRouter = () => {\r\n  return (\r\n    <PosState>\r\n      <Switch>\r\n        <Route path=\"/pos/pedido\" component={PosPedidoScreen} />\r\n      </Switch>\r\n    </PosState>\r\n\r\n  )\r\n}\r\n\r\nexport default PosRouter\r\n","import React from 'react'\r\nimport {  HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport AdminRouter from './modules/admin/AdminRouter';\r\nimport PosRouter from './modules/pos/PosRouter';\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n\r\n      <Switch>\r\n\r\n        <Route path=\"/pos\" component={PosRouter} />\r\n        <Route path=\"/admin\" component={AdminRouter} />\r\n      </Switch>\r\n\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"./styles/styles.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}